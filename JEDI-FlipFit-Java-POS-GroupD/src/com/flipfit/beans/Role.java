// File: com.flipfit.beans.Role.java
package com.flipfit.beans;

public class Role {
  private long roleId;
  private String roleName;
  private String roleDescription;

  // Constructor with ID (useful when fetching from DAO/DB)
  public Role(long roleId, String roleName, String roleDescription) {
    this.roleId = roleId;
    this.roleName = roleName;
    this.roleDescription = roleDescription;
  }

  // Existing constructor (useful for initial creation before ID is assigned)
  public Role(String roleName, String roleDescription) {
    this.roleName = roleName;
    this.roleDescription = roleDescription;
    // roleId would typically be generated by a DAO/database here
  }


  public long getRoleId() {
    return roleId;
  }

  public void setRoleId(long roleId) {
    this.roleId = roleId;
  }

  public String getRoleName() {
    return roleName;
  }

  public void setRoleName(String roleName) {
    this.roleName = roleName;
  }

  public String getRoleDescription() {
    return roleDescription;
  }

  public void setRoleDescription(String roleDescription) {
    this.roleDescription = roleDescription;
  }

  @Override
  public String toString() {
    return roleName; // For cleaner printing when displayed
    // return "Role{" + "roleId=" + roleId + ", roleName='" + roleName + '\'' + '}'; // More detailed for debugging
  }

  // IMPORTANT: Override equals and hashCode for correct Set behavior
  @Override
  public boolean equals(Object o) {
    if (this == o) return true;
    if (o == null || getClass() != o.getClass()) return false;
    Role role = (Role) o;
    // Equality based on roleId for uniqueness if roles are managed by ID
    // OR based on roleName if roleName is guaranteed to be unique
    return roleId == role.roleId; // Assuming roleId is the primary key and unique
    // Alternatively, if roleName is unique:
    // return roleName.equals(role.roleName);
  }

  @Override
  public int hashCode() {
    // Hash based on roleId
    return Long.hashCode(roleId);
    // Alternatively, if hashing by roleName:
    // return roleName.hashCode();
  }
}